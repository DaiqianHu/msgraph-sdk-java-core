# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  pull_request:
    branches: [ dev, master ] 
    paths:
      - 'src/**'
      - '.github/**'
      - '!.gradle/wrapper'
      - '!.gitignore'
      - '!LICENSE'
      - '!THIRD PARTY NOTICES'
      - '!*.md'
      - '*.gradle'  
  workflow_dispatch: 
 
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 16
        uses: actions/setup-java@v2
        with:
          java-version: '16'
          distribution: 'adopt'
          cache: gradle     
      - name: Easy detect-secrets
        uses: RobertFischer/detect-secrets-action@v2.0.0
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
      - name: Build with Gradle
        run: ./gradlew build
      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v2.2.4
        with:
          name: drop
          path: |
            **/libs/*
            build/generated-pom.xml
            build/generated-pom.xml.asc
            build.gradle
            gradlew
            gradlew.bat
            settings.gradle
            gradle.properties
            **/gradle/**
            Scripts/**
  getTag:
    runs-on: windows-latest
    env:
      RELEASE_TAG: ""
    steps:
      - uses: actions/checkout@v2
      - name: Get Version
        run: |
          $propertiesPath = ".\gradle.properties"
          $file = get-item $propertiesPath
          $findVersions = $file | Select-String -Pattern "mavenMajorVersion" -Context 0,2
          $findVersions = $findVersions -split "`r`n"
          $versionIndex = $findVersions[0].IndexOf("=")
          $majorVersion = $findVersions[0].Substring($versionIndex+2)
          $minorVersion = $findVersions[1].Substring($versionIndex+2)
          $patchVersion = $findVersions[2].Substring($versionIndex+2)
          $version = "$majorVersion.$minorVersion.$patchVersion"
          echo $version
          echo "RELEASE_TAG=HELLO" >> $GITHUB_ENV
        shell: pwsh
      - name: Test Print
        run: echo "${{ env.RELEASE_TAG }}"
